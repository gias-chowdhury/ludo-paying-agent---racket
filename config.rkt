;#lang racket

(require racket/include)
(include "types.rkt")

;;;Define Board
(define board (make-board "Ludo Board"))

;;;Defining Blocks

(define block-100 (make-start-block '100 'orange))
(define block-200 (make-start-block '200 'red))
(define block-300 (make-start-block '300 'green))
(define block-400 (make-start-block '400 'blue))

(define block-1 (make-block '1 'tan #t))
(define block-2 (make-block '2 'black #f))
(define block-3 (make-block '3 'black #f))
(define block-4 (make-block '4 'black #f))
(define block-5 (make-block '5 'black #f))
(define block-6 (make-block '6 'black #f))
(define block-7 (make-block '7 'black #f))
(define block-8 (make-block '8 'black #f))
(define block-9 (make-block '9 'tan #t))
(define block-10 (make-block '10 'black #f))
(define block-11 (make-block '11 'black #f))

(define block-12 (make-terminal-block '12 'black))

(define block-13 (make-block '13 'black #f))
(define block-14 (make-block '14 'tan #t))
(define block-15 (make-block '15 'black #f))
(define block-16 (make-block '16 'black #f))
(define block-17 (make-block '17 'black #f))
(define block-18 (make-block '18 'black #f))
(define block-19 (make-block '19 'black #f))
(define block-20 (make-block '20 'black #f))
(define block-21 (make-block '21 'black #f))
(define block-22 (make-block '22 'tan #t))
(define block-23 (make-block '23 'black #f))
(define block-24 (make-block '24 'black #f))

(define block-25 (make-terminal-block '25 'black))

(define block-26 (make-block '26 'black #f))
(define block-27 (make-block '27 'tan #t))
(define block-28 (make-block '28 'black #f))
(define block-29 (make-block '29 'black #f))
(define block-30 (make-block '30 'black #f))
(define block-31 (make-block '31 'black #f))
(define block-32 (make-block '32 'black #f))
(define block-33 (make-block '33 'black #f))
(define block-34 (make-block '34 'balck #f))
(define block-35 (make-block '35 'tan #t))
(define block-36 (make-block '36 'black #f))
(define block-37 (make-terminal-block '37 'black))

(define block-38 (make-block '38 'black #f))

(define block-39 (make-block '39 'tan #t))
(define block-40 (make-block '40 'black #f))
(define block-41 (make-block '41 'black #f))
(define block-42 (make-block '42 'black #f))
(define block-43 (make-block '43 'black #f))
(define block-44 (make-block '44 'black #f))
(define block-45 (make-block '45 'black #f))
(define block-46 (make-block '46 'black #f))
(define block-47 (make-block '47 'black #f))
(define block-48 (make-block '48 'tan #t))
(define block-49 (make-block '49 'black #f))
(define block-50 (make-block '50 'black #f))

(define block-51 (make-terminal-block '51 'black))

(define block-52 (make-block '52 'black #f))

;;; Defining Home blocks
(define block-101 (make-block '101 'orange #t))
(define block-102 (make-block '102 'orange #t))
(define block-103 (make-block '103 'orange #t))
(define block-104 (make-block '104 'orange #t))
(define block-105 (make-block '105 'orange #t))

(define block-201 (make-block '201 'red #t))
(define block-202 (make-block '202 'red #t))
(define block-203 (make-block '203 'red #t))
(define block-204 (make-block '204 'red #t))
(define block-205 (make-block '205 'red #t))

(define block-301 (make-block '301 'green #t))
(define block-302 (make-block '302 'green #t))
(define block-303 (make-block '303 'green #t))
(define block-304 (make-block '304 'green #t))
(define block-305 (make-block '305 'green #t))

(define block-401 (make-block '401 'blue #t))
(define block-402 (make-block '402 'blue #t))
(define block-403 (make-block '403 'blue #t))
(define block-404 (make-block '404 'blue #t))
(define block-405 (make-block '405 'blue #t))

(define big-block (make-big-block '500 'black))

;;; Setting next block for each block

(ask block-100 'set-next-block block-1)
(ask block-200 'set-next-block block-14)
(ask block-300 'set-next-block block-27)
(ask block-400 'set-next-block block-40)

(ask block-1 'set-next-block block-2)
(ask block-2 'set-next-block block-3)
(ask block-3 'set-next-block block-4)
(ask block-4 'set-next-block block-5)
(ask block-5 'set-next-block block-6)
(ask block-6 'set-next-block block-7)
(ask block-7 'set-next-block block-8)
(ask block-8 'set-next-block block-9)
(ask block-9 'set-next-block block-10)
(ask block-10 'set-next-block block-11)
(ask block-11 'set-next-block block-12)
(ask block-12 'set-next-block block-13)
(ask block-13 'set-next-block block-14)
(ask block-14 'set-next-block block-15)
(ask block-15 'set-next-block block-16)
(ask block-16 'set-next-block block-17)
(ask block-17 'set-next-block block-18)
(ask block-18 'set-next-block block-19)
(ask block-19 'set-next-block block-20)
(ask block-20 'set-next-block block-21)
(ask block-21 'set-next-block block-22)
(ask block-22 'set-next-block block-23)
(ask block-23 'set-next-block block-24)
(ask block-24 'set-next-block block-25)
(ask block-25 'set-next-block block-26)
(ask block-26 'set-next-block block-27)
(ask block-27 'set-next-block block-28)
(ask block-28 'set-next-block block-29)
(ask block-29 'set-next-block block-30)
(ask block-30 'set-next-block block-31)
(ask block-31 'set-next-block block-32)
(ask block-32 'set-next-block block-33)
(ask block-33 'set-next-block block-34)
(ask block-34 'set-next-block block-35)
(ask block-35 'set-next-block block-36)
(ask block-36 'set-next-block block-37)
(ask block-37 'set-next-block block-38)
(ask block-38 'set-next-block block-39)
(ask block-39 'set-next-block block-40)
(ask block-40 'set-next-block block-41)
(ask block-41 'set-next-block block-42)
(ask block-42 'set-next-block block-43)
(ask block-43 'set-next-block block-44)
(ask block-44 'set-next-block block-45)
(ask block-45 'set-next-block block-46)
(ask block-46 'set-next-block block-47)
(ask block-47 'set-next-block block-48)
(ask block-48 'set-next-block block-49)
(ask block-49 'set-next-block block-50)
(ask block-50 'set-next-block block-51)
(ask block-51 'set-next-block block-52)
(ask block-52 'set-next-block block-1)

(ask block-101 'set-next-block block-102)
(ask block-102 'set-next-block block-103)
(ask block-103 'set-next-block block-104)
(ask block-104 'set-next-block block-105)
(ask block-105 'set-next-block big-block)

(ask block-201 'set-next-block block-202)
(ask block-202 'set-next-block block-203)
(ask block-203 'set-next-block block-204)
(ask block-204 'set-next-block block-205)
(ask block-205 'set-next-block big-block)

(ask block-301 'set-next-block block-302)
(ask block-302 'set-next-block block-303)
(ask block-303 'set-next-block block-304)
(ask block-304 'set-next-block block-305)
(ask block-305 'set-next-block big-block)

(ask block-401 'set-next-block block-402)
(ask block-402 'set-next-block block-403)
(ask block-403 'set-next-block block-404)
(ask block-404 'set-next-block block-405)
(ask block-405 'set-next-block big-block)

;Set rigth block of each block

(ask block-12 'set-right-block block-201)
(ask block-25 'set-right-block block-301)
(ask block-37 'set-right-block block-401)
(ask block-51 'set-right-block block-101)

;;; Adding Blocks to Board
(ask board 'add-block block-100)
(ask board 'add-block block-200)
(ask board 'add-block block-300)
(ask board 'add-block block-400)

(ask board 'add-block block-1)
(ask board 'add-block block-2)
(ask board 'add-block block-3)
(ask board 'add-block block-4)
(ask board 'add-block block-5)
(ask board 'add-block block-6)
(ask board 'add-block block-7)
(ask board 'add-block block-8)
(ask board 'add-block block-9)
(ask board 'add-block block-10)
(ask board 'add-block block-11)
(ask board 'add-block block-12)
(ask board 'add-block block-13)
(ask board 'add-block block-14)
(ask board 'add-block block-15)
(ask board 'add-block block-16)
(ask board 'add-block block-17)
(ask board 'add-block block-18)
(ask board 'add-block block-19)
(ask board 'add-block block-20)
(ask board 'add-block block-21)
(ask board 'add-block block-22)
(ask board 'add-block block-23)
(ask board 'add-block block-24)
(ask board 'add-block block-25)
(ask board 'add-block block-26)
(ask board 'add-block block-27)
(ask board 'add-block block-28)
(ask board 'add-block block-29)
(ask board 'add-block block-30)
(ask board 'add-block block-31)
(ask board 'add-block block-32)
(ask board 'add-block block-33)
(ask board 'add-block block-34)
(ask board 'add-block block-35)
(ask board 'add-block block-36)
(ask board 'add-block block-37)
(ask board 'add-block block-38)
(ask board 'add-block block-39)
(ask board 'add-block block-40)
(ask board 'add-block block-41)
(ask board 'add-block block-42)
(ask board 'add-block block-43)
(ask board 'add-block block-44)
(ask board 'add-block block-45)
(ask board 'add-block block-46)
(ask board 'add-block block-47)
(ask board 'add-block block-48)
(ask board 'add-block block-49)
(ask board 'add-block block-50)
(ask board 'add-block block-51)
(ask board 'add-block block-52)

;;; Adding Home Blocks to Board
(ask board 'add-block block-101)
(ask board 'add-block block-102)
(ask board 'add-block block-103)
(ask board 'add-block block-104)
(ask board 'add-block block-105)

(ask board 'add-block block-201)
(ask board 'add-block block-202)
(ask board 'add-block block-203)
(ask board 'add-block block-204)
(ask board 'add-block block-205)

(ask board 'add-block block-301)
(ask board 'add-block block-302)
(ask board 'add-block block-303)
(ask board 'add-block block-304)
(ask board 'add-block block-305)

(ask board 'add-block block-401)
(ask board 'add-block block-402)
(ask board 'add-block block-403)
(ask board 'add-block block-404)
(ask board 'add-block block-405)

(ask board 'add-block big-block)

(define agent (make-agent 'agent board block-100 block-50))
(define player1 (make-player "Orange" board block-100 block-51))
(define player2 (make-player "Red" board block-200 block-12))
(define player3 (make-player "Green" board block-300 block-25))
(define player4 (make-player "Blue" board block-400 block-38))

(ask board 'add-player player4)
(ask board 'add-player player3)
(ask board 'add-player player2)
(ask board 'add-player player1)

(ask player1 'set-tokens (make-tokens 4 'orange))
(ask player2 'set-tokens (make-tokens 4 'red))
(ask player3 'set-tokens (make-tokens 4 'green))
(ask player4 'set-tokens (make-tokens 4 'blue))

(define bool-rule (make-bool-rule-object 'bool-rule))
(define playing-players (filter (lambda (player) (ask player 'in-play?)) (ask board 'players)))







